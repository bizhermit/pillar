version: '3.8'
services:
  node:
    container_name: 'pillar_dev'
    env_file:
      - path: '../.env'
        required: true
      - path: '../.env.local'
        required: false
    build:
      context: '../'
      dockerfile: '.devcontainer/docker/node/Dockerfile'
    image: 'pillar_dev'
    tty: true
    volumes:
      - '../:/workspace:delegated'
      - 'pillar_dev_node_modules:/workspace/node_modules'
      - 'pillar_dev_next:/workspace/.next'
      - 'pillar_dev_playwright:/workspace/.playwright'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - 'TZ=${TZ:-UTC}'
      - 'WATCHPACK_POLLING=true'
      - 'LOCALHOST=${LOCALHOST:-host.docker.internal}'
      - 'DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@database:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-pillar}'
    ports:
      - '${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}'
    command: bash -c 'sh /workspace/.devcontainer/postCreatedCommand.sh && npm i && npm run migrate && npm run dev && bash'
    networks:
      - pillar_dev
    depends_on:
      - database
  database:
    container_name: 'pillar_dev_db'
    env_file:
      - path: '../.env'
        required: true
      - path: '../.env.local'
        required: false
    build:
      context: '../'
      dockerfile: '.devcontainer/docker/postgres/Dockerfile'
    image: 'pillar_dev_db'
    restart: always
    volumes:
      - 'pillar_dev_db:/var/lib/postgresql/data'
      - '../database/postgres/init:/docker-entrypoint-initdb.d'
    environment:
      - 'TZ=${TZ:-UTC}'
      - 'POSTGRES_USER=${POSTGRES_USER:-postgres}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}'
      - 'POSTGRES_DB=${POSTGRES_DB:-pillar}'
      - 'POSTGRES_PORT=${POSTGRES_PORT:-5432}'
    ports:
      - '${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}'
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: 'postgres -c log_destination=stderr -c log_statement=all -c log_connections=on -c log_disconnections=on'
    networks:
      - pillar_dev
networks:
  pillar_dev:
    name: pillar_dev
    driver: bridge
volumes:
  pillar_dev_node_modules:
  pillar_dev_next:
  pillar_dev_playwright:
  pillar_dev_db:
